trigger:
  branches:
    include:
    - qemu1
  tags:
    include:
    - v*
pr:
- master
variables:
  AZURE: 'true'
  PYTHON_VERSION: 3.9
  CONDA_ENV: test-env
jobs:
##########################################
- job: QEMU
###########################################
  variables:
    COMPILER: gcc
    OS_NAME: 'linux'
    PRODUCES_ARTIFACTS: 'true'
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 120
  strategy:
    matrix:
      bdist1:
        TASK: bdist
        ARCH: aarch64
      bdist2:
        TASK: bdist
        ARCH: aarch64
      bdist3:
        TASK: bdist
        ARCH: aarch64
      bdist4:
        TASK: bdist
        ARCH: aarch64
      bdist5:
        TASK: bdist
        ARCH: aarch64
      bdist6:
        TASK: bdist
        ARCH: aarch64
      bdist7:
        TASK: bdist
        ARCH: aarch64
      bdist8:
        TASK: bdist
        ARCH: aarch64
      bdist9:
        TASK: bdist
        ARCH: aarch64
      bdist10:
        TASK: bdist
        ARCH: aarch64
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BUILD_DIRECTORY]$BUILD_SOURCESDIRECTORY"
      echo "##vso[task.setvariable variable=LGB_VER]$(head -n 1 VERSION.txt)"
      CONDA=$HOME/miniconda
      echo "##vso[task.setvariable variable=CONDA]$CONDA"
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: 'Set variables'
  - script: |
      sudo apt-get update
      sudo apt-get install --no-install-recommends -y \
        binfmt-support \
        qemu \
        qemu-user \
        qemu-user-static
    displayName: 'Install QEMU'
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    displayName: 'Enable Docker multi-architecture support'
  - script: |
      export ROOT_DOCKER_FOLDER=/LightGBM
      cat > docker.env <<EOF
      AZURE=$AZURE
      OS_NAME=$OS_NAME
      ARCH=$ARCH
      COMPILER=$COMPILER
      TASK=$TASK
      METHOD=$METHOD
      CONDA_ENV=$CONDA_ENV
      PYTHON_VERSION=$PYTHON_VERSION
      BUILD_DIRECTORY=$ROOT_DOCKER_FOLDER
      LGB_VER=$(head -n 1 VERSION.txt)
      PRODUCES_ARTIFACTS=$PRODUCES_ARTIFACTS
      EOF
      cat > docker-script.sh <<EOF
      export CONDA=\$HOME/miniconda
      export PATH=\$CONDA/bin:\$PATH
      $ROOT_DOCKER_FOLDER/.ci/setup.sh || exit -1
      $ROOT_DOCKER_FOLDER/.ci/test.sh || exit -1
      EOF
      docker run --env-file docker.env -v "$(Build.SourcesDirectory)":"$ROOT_DOCKER_FOLDER" --rm "quay.io/pypa/manylinux2014_${ARCH}" /bin/bash $ROOT_DOCKER_FOLDER/docker-script.sh
    displayName: 'Setup and run tests'
  - task: PublishBuildArtifacts@1
    condition: and(succeeded(), in(variables['TASK'], 'bdist'), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: PackageAssets
      artifactType: container
